mathematics_NNS computer_NN science_NN dynamic_JJ programming_NN method_NN solve_VBG problem_NNS exhibit_VBP property_NNS overlap_VBG subproblem_NNS optimal_JJ substructure_NN describe_VBD method_NN take_VBZ much_RB less_JJR time_NN naive_JJ method_NNS term_NN originally_RB use_VBN richard_NN bellman_NN describe_VB process_NN solve_VBG problem_NNS one_CD need_VBZ find_VB best_JJS decision_NNS one_CD another_DT refine_VBN modern_JJ meaning_NN field_NN found_VBN system_NNS analysis_NN engineering_NN topic_NN recognize_VBN ieee_NN bellman_NNS contribution_NN remember_VBN name_NN bellman_NN equation_NN central_JJ result_NN dynamic_JJ programming_NN restate_VBZ optimization_NN problem_NN recursive_JJ form_NN word_NN programming_NN dynamic_JJ programming_NN particular_JJ connection_NN computer_NN programming_NN instead_RB come_VBZ term_NN mathematical_JJ programming_NN synonym_NN optimization_NN thus_RB program_NN optimal_JJ plan_NN action_NN produce_VBN instance_NN finalize_VBN schedule_NN event_NNS exhibition_NN sometimes_RB call_VBN program_NN programming_NN sense_NN mean_VBZ find_VBG acceptable_JJ plan_NN action_NN algorithm_NN optimal_JJ substructure_NN mean_VBZ optimal_JJ solution_NNS subproblem_NNS can_MD use_VBN find_VB optimal_JJ solution_NNS overall_JJ problem_NN example_NN shortest_JJS path_NN goal_NN vertex_NN graph_NN can_MD find_VBN first_JJ compute_VBG shortest_JJS path_NN goal_NN adjacent_JJ vertex_NNS use_VBG pick_VB best_JJS overall_JJ path_NN show_VBN figure_NN general_JJ can_MD solve_VB problem_NN optimal_JJ substructure_NN use_VBG three_CD step_NN process_NN break_VB problem_NN smaller_JJR subproblem_NNS solve_VB problem_NNS optimally_RB use_VBG three_CD step_NN process_NN recursively_NN use_NN optimal_JJ solution_NNS construct_VB optimal_JJ solution_NN original_JJ problem_NN subproblem_NNS solve_VBN divide_VBG sub_NN subproblem_NNS reach_VBP simple_JJ case_NN solvable_JJ constant_JJ time_NN subproblem_NN graph_NN fibonaccus_JJ sequence_NN tree_NN dag_NN indicate_VBZ overlap_VBG subproblem_NNS say_VB problem_NN overlap_VBG subproblem_NNS say_VB subproblem_NNS use_VBN solve_VB many_JJ different_JJ larger_JJR problem_NNS example_NN fibonaccus_JJ sequence_NN computing_VBG number_NN involve_VBZ compute_VBG need_VBN compute_VB naive_JJ approach_NN compute_VBG may_MD end_VB computing_VBG twice_RB apply_VBZ whenever_WRB overlap_VBG subproblem_NNS present_JJ naive_JJ approach_NN may_MD waste_VB time_NN recompute_VBG optimal_JJ solution_NNS subproblem_NNS already_RB solve_VBN order_NN avoid_VB instead_RB save_VBP solution_NNS problem_NNS already_RB solve_VBN need_VBP solve_VB problem_NN later_RB can_MD retrieve_VB reuse_VB already_RB compute_JJ solution_NN approach_NN call_VBN memoization_NN memorization_NN although_IN term_NN also_RB fit_VBZ sure_JJ wont_VBP need_VB particular_JJ solution_NN anymore_RB can_MD throw_VB away_RB save_VB space_NN case_NNS can_MD even_RB compute_VB solution_NNS subproblem_NNS know_VBP well_RB need_VB advance_NN 

dynamic_JJ programming_NN powerful_JJ mathematical_JJ technique_NN often_RB utilise_VBD programming_NN solve_VBG optimization_NN problem_NNS normally_RB minimize_VBG maximize_VBG greedy_JJ algorithm_NNS focus_VB make_VBG best_JJS local_JJ choice_NN decision_NN make_VBG stage_NN without_IN proof_NN correctness_NN algorithm_NN likely_JJ fail_VB dynamic_JJ programming_NN can_MD design_VB algorithm_NN search_VBZ possibility_NNS ensure_VBZ correctness_NN whilst_NN store_VBG result_NNS avoid_VB recompute_JJ lead_VBG computational_JJ efficiency_NN dynamic_JJ programming_NN solve_VBZ problem_NNS combine_VBG solution_NNS subproblem_NNS subproblem_NNS however_RB independent_JJ subproblem_NNS can_MD share_VB subsubproblem_NNS solution_NN one_CD subproblem_NN necessarily_RB affect_VB solution_NNS subproblem_NNS stem_VBG problem_NN dynamic_JJ programming_NN reduce_VBZ computation_JJ time_NN solve_VBG subproblem_NNS bottom_NN way_NN store_VBZ solution_NN subproblem_NN first_JJ time_NN solve_VBN mean_NN can_MD look_VB solution_NN subproblem_NN encounter_VBN subsequently_RB key_NN dynamic_JJ programming_NN find_VB structure_NN optimal_JJ solution_NNS step_NNS require_VBN follow_VBZ generalise_VB structure_NN optimal_JJ solution_NN recursively_RB define_VB value_NN optimal_JJ solution_NN compute_VB optimal_JJ solution_NN value_NNS either_CC top_VB caching_NN bottom_NN use_VBG table_NN generate_VB optimal_JJ solution_NN computed_JJ value_NNS 

File 1 Direct Fingerprint: 
[986110, 1940414, 2894718, 3849022, 4803326, 5757630, 6711934, 7666238, 8620542, 9574846, 10529150, 11483454, 12437448, 6034677, 15300670, 16254974, 17209278, 18163582, 19117886, 20072190, 21026494, 21980798, 22935102, 23889406, 24843028, 6731774, 8281898, 27706622, 28660926, 29615075, 27829754, 32478142, 33432446, 34386750, 35341054, 36295358, 37249662, 38203966, 39158270, 40112574, 41066878, 42021182, 42975486, 43929790, 44883350, 25551719, 47745487, 3895646, 6250127, 50609918, 51564222, 52518526, 53471156, 4743403, 3901598, 6432996, 2056540, 6495120, 22201084, 6578138, 51870378, 14069257, 63970174, 64924478, 65878782, 66833086, 67787390, 68741694, 69695998, 70649961, 61177756, 6988919, 73513214, 74467084, 63979939, 12498208, 14462740, 13578930, 23103060, 14531064, 53411233, 81147646, 82101950, 83056254, 84010310, 79454519, 86873222, 82102105, 83061214, 84164473, 89736382, 90618270, 32141761, 80264828, 83364084, 93553040, 79714392, 51197368, 12518265, 15890445, 91796549, 29012962, 53936373, 14102117, 10641432, 91796549, 29150416, 14553787, 15391159, 51262282, 14530971, 105752997, 14623320, 109776766, 110731070, 110583138, 21212060, 86842656, 115502590, 116456894, 115783264, 10639014, 14889114, 10637681, 11898234, 25299410, 97186085, 119457973, 10040466, 82225268, 115509534, 116672375, 124090086, 89979050, 22585794, 90074716, 124306807, 129636544, 10652344, 15306188, 22627303, 128863962, 21822047, 14464631, 15484283, 107896244, 60793108, 11790292, 107942186, 95059888, 55316927, 81270468, 137625151, 105686874, 74898418, 143955940, 25120633, 148903230, 149857534, 149631730, 57922043, 81640112, 154629054, 155583358, 155941780, 81758656, 76252901, 16254509]

File 1 Direct Sorted Fingerprint: 
[986110, 1940414, 2894718, 3849022, 4803326, 5757630, 6711934, 7666238, 8620542, 9574846, 5942328, 5973111, 6003894, 6034677, 15300670, 16254974, 17209278, 18163582, 19117886, 20072190, 21026494, 21980798, 7266028, 6729790, 6730782, 6731774, 8281898, 27706622, 27737405, 27768188, 27798971, 27829754, 32478142, 33432446, 34386750, 35341054, 36295358, 37249662, 38203966, 39158270, 40112574, 41066878, 42021182, 25459370, 25490153, 5234257, 3893662, 3894654, 3895646, 6250127, 50609918, 6342476, 3899614, 3849642, 2054556, 2054556, 2055548, 2056540, 5333550, 5334542, 5335534, 6288846, 6289838, 13678998, 14007691, 14038474, 14069257, 63970174, 64924478, 65878782, 66833086, 67787390, 63231351, 6658242, 6659234, 6660226, 6988919, 63980094, 14069629, 12490706, 12408928, 11547035, 11550910, 11829600, 12753090, 13010700, 13725684, 53319876, 53380450, 53411233, 81147646, 79362170, 79392953, 79423736, 79454519, 82102074, 82102105, 83061214, 32478080, 32150379, 32141730, 32141761, 79670000, 53365539, 13727172, 12478833, 12478678, 12518265, 15890445, 27599300, 12823956, 12821073, 7845976, 7846007, 10348451, 10349412, 28819739, 12946096, 12475237, 13753429, 12829908, 12830900, 12831892, 14530971, 14561754, 14592537, 14623320, 21149533, 20346168, 20347160, 86811873, 86842656, 13946063, 10639262, 10572984, 10572984, 10572984, 10572984, 10531661, 11466714, 11898203, 11898234, 11298632, 10047410, 10040683, 10040466, 82225268, 89890266, 21372950, 21373942, 21374934, 89895226, 124245241, 14407808, 10654142, 10539814, 11812178, 21703782, 12712697, 12655037, 11552770, 11552801, 13637210, 14561723, 59815244, 58922506, 9288778, 9943126, 10867732, 53914766, 53367988, 53414147, 81090978, 105752191, 73599053, 73599084, 25028284, 25059067, 25089850, 25120633, 59352476, 57922508, 57071093, 80088996, 81609329, 81640112, 81701678, 80808940, 78335326, 13659065, 13659096, 13691801]

File 2 Direct Fingerprint: 
[4009323, 9777741, 63477522, 160850010, 4878284, 8086474, 12776216, 167035006, 167989310, 168943614, 169897918, 168291188, 35156201, 173715010, 172853179, 176578046, 176222538, 80618414, 3928723, 7276320, 80716560, 183257957, 179625656, 186119474, 140930123, 188983998, 185757952, 4037409, 10649368, 13514915, 11642143, 17356993, 13759288, 82991526, 102573017, 30563396, 117222439, 76289729, 17391341, 4052382, 11107827, 17773571, 7033466, 17640054, 201952197, 105251231, 85644289, 21093640, 83226320, 105378517, 117534237, 203299550, 3879681, 5753910, 14668890, 82563571, 211887294, 212841443, 204598140, 15507006, 108545291, 211059935, 15411960, 15509982, 108637640, 218567422, 219521106, 199801076, 95824596, 15515717]

File 2 Direct Sorted Fingerprint: 
[3908883, 6664101, 9913304, 4997789, 4883430, 4835504, 6760294, 9170513, 12776216, 167035006, 167989310, 35063852, 35094635, 35125418, 35156201, 172760830, 172791613, 172822396, 80531862, 6294674, 4030558, 3928692, 3928723, 7116360, 77467357, 80685777, 80716560, 179533307, 179564090, 140837774, 140868557, 140899340, 9820924, 4041470, 3856989, 5056348, 7830755, 11524839, 11524870, 11642143, 13757304, 13758296, 13759288, 30180856, 30180887, 13731481, 12806069, 4110941, 3902404, 3902435, 4052382, 5392977, 6846970, 6847001, 7033466, 17640054, 88362927, 20397101, 20133880, 80051300, 105377525, 10405801, 4060318, 3879650, 3879681, 5041530, 13014947, 14667898, 14668890, 82563571, 18811823, 15502139, 15502170, 15507006, 15507998, 15418625, 12502920, 15392647, 15418656, 15509982, 108637640, 95232682, 15096876, 15510137]

Direct Size of intersection: 0
Direct Size of union: 238
Direct Size of smaller set: 70
Direct Size of larger set: 168
Direct Jaccard: 0.000
Direct Jaccard with smaller set: 0.000

Stats after sorting

Direct Size of intersection: 0
Direct Size of union: 276
Direct Size of smaller set: 84
Direct Size of larger set: 192
Direct Jaccard: 0.000
Direct Jaccard with smaller set: 0.000


Cluster IDs
{compute_VB=7, algorithm_NN=10, utilise_VBD=5, bellman_NNS=9, retrieve_VB=13, take_VBZ=2, decision_NN=22, example_NN=33, value_NN=23, problem_NNS=32, indicate_VBZ=14, vertex_NN=1, solution_NNS=33, much_RB=31, vertex_NNS=1, throw_VB=2, subsequently_RB=29, break_VB=18, program_NN=24, save_VBP=25, encounter_VBN=13, apply_VBZ=5, case_NN=33, step_NN=20, result_NNS=33, produce_VBN=2, involve_VBZ=2, instance_NN=33, lead_VBG=2, method_NN=34, solve_VBZ=8, way_NN=35, computing_VBG=7, plan_NN=24, form_NN=12, need_VB=2, solve_VBN=8, remember_VBN=13, value_NNS=23, later_RB=29, describe_VBD=17, solve_VBG=8, approach_NN=21, follow_VBZ=26, search_VBZ=28, event_NNS=33, step_NNS=20, name_NN=12, recognize_VBN=27, look_VB=28, store_VBZ=15, require_VBN=2, problem_NN=32, construct_VB=2, found_VBN=13, algorithm_NNS=10, case_NNS=33, fail_VB=18, show_VBN=14, store_VBG=15, exhibit_VBP=14, affect_VB=2, use_VBN=5, reach_VBP=2, use_VBG=5, save_VB=25, find_VB=13, figure_NN=12, decision_NNS=22, need_VBZ=2, top_VB=2, solve_VB=8, solution_NN=33, find_VBN=13, make_VBG=2, need_VBP=2, result_NN=33, bellman_NN=9, need_VBN=2, describe_VB=17, know_VBP=27, find_VBG=13, number_NN=12, often_RB=31, path_NN=35, compute_VBG=7, method_NNS=34, come_VBZ=26, advance_NN=21}

File 1 hash sequence:

37 38 39 40 41 34 8 32 14 42 43 44 45 46 17 34 2 31 47 48 49 34 50 51 5 52 9 17 53 8 32 54 2 13 55 22 54 56 57 58 59 60 13 61 62 63 64 27 65 9 66 13 12 9 67 68 33 40 41 69 70 32 71 12 72 41 40 41 73 74 38 41 75 26 50 76 41 77 70 78 24 45 24 79 2 33 80 81 33 82 83 84 24 41 85 86 13 87 24 79 10 45 46 86 45 33 44 88 5 13 45 33 89 32 33 90 35 91 1 92 88 13 93 7 90 35 91 94 1 5 95 55 89 35 14 12 96 88 8 32 45 46 5 97 20 53 18 32 98 44 8 32 99 5 97 20 53 100 101 45 33 2 45 33 102 32 44 8 103 104 44 2 105 33 106 107 48 108 92 109 110 111 112 14 43 44 113 32 43 44 113 44 5 8 114 115 116 32 33 109 110 7 12 2 7 2 7 49 21 7 117 118 7 119 5 120 43 44 121 49 21 117 122 48 123 45 33 44 124 8 125 126 75 25 33 32 124 8 2 8 32 29 88 13 127 124 128 33 21 84 129 130 131 50 132 133 134 135 2 73 33 136 88 2 137 25 138 33 88 139 7 33 44 27 140 2 21 

File 1 Fingerprint: 

[35341054, 36295358, 37249414, 31669228, 8356236, 14223203, 40112574, 41066878, 42020252, 16715634, 2817218, 30076975, 44883598, 32938430, 6175913, 8869317, 8393436, 2287862, 13667094, 21981759, 51595005, 53472830, 54427134, 55379950, 13884559, 58244350, 59197476, 26882177, 10290760, 11416866, 10374057, 31709373, 38230750, 39988202, 31681597, 13267845, 38234718, 40111396, 36388110, 25575403, 40227956, 66994627, 23530612, 24520938, 2909536, 32938337, 33001422, 78282843, 23470286, 40479645, 14623103, 24528998, 10622677, 43012872, 42586560, 31871720, 5049156, 13380840, 33159367, 30623350, 33193839, 35038029, 3749264, 14785853, 9182293, 35124581, 1165476, 7503364, 53479123, 32754817, 13381770, 14027004, 8386151, 30937628, 7528195, 20067633, 17672232, 32514722, 8436774, 7528195, 20148574, 52024169, 42544865, 30580043, 3222512, 33546991, 30874357, 10557949, 40796434, 5010096, 33738354, 47638227, 88320302, 104050942, 103894113, 14256094, 41131792, 30879472, 41132164, 40795101, 4969052, 10898453, 108116840, 30643934, 33829339, 6824278, 2057718, 2103319, 7944804, 10063809, 10018301, 8235212, 41140007, 44287375, 22998218, 48037569, 42587676, 31906409, 11235454, 70041555, 24105724, 31548917, 7456430, 2117021, 8372077, 29420147, 15912362, 118362216, 31186527, 22024384, 81547794, 122601776, 50240429, 125999934, 124806093, 4057714, 34612399, 5956712, 27233624, 33231597, 7490871, 29108380]

File 1 Sorted Fingerprint: 

[32601274, 8440773, 8375425, 7837048, 7837296, 13924301, 14223203, 17055332, 16757422, 2387589, 2384334, 2804694, 2817218, 30076975, 32847538, 5680130, 4936347, 4903673, 7674267, 2117796, 2257172, 12714774, 21980767, 21981759, 51595005, 13792210, 13822993, 13853776, 13884559, 26844636, 9179565, 8763483, 8683720, 8683720, 8683751, 8735676, 9361287, 31709342, 30842582, 12105035, 12106027, 12315525, 38203904, 36387676, 36387676, 25185330, 25283352, 25283383, 39429334, 24326289, 23574787, 22925151, 2607720, 2596188, 2908544, 2909536, 31538687, 32939856, 24689733, 23468302, 13311555, 12806100, 12799373, 10028810, 9995888, 10622460, 10622677, 31832908, 5645720, 5049900, 5037996, 13034880, 30570247, 30572200, 2055517, 1398224, 6939381, 6941303, 7596643, 2056571, 1162841, 1128276, 6344584, 11535720, 7833204, 8386151, 5615588, 5260638, 5267365, 17251593, 8386802, 8386802, 4889754, 5267365, 20145660, 20148574, 2876521, 2874785, 2863253, 2876552, 8386926, 8386957, 3260053, 2875684, 2934336, 32011344, 47175955, 47176947, 88289519, 16316447, 14320450, 14256063, 14256094, 30879472, 30879472, 5974196, 4901720, 4901751, 4969052, 10898453, 30644120, 30643934, 7555909, 6930298, 2070521, 2062678, 1913723, 1913568, 2063825, 2077279, 6694884, 6789279, 4943229, 4944221, 5944622, 20755585, 20940128, 31866729, 31834055, 8417399, 8822011, 9746524, 24075375, 8377037, 2119966, 2096902, 2094050, 2114231, 8285587, 12903192, 12958217, 14750482, 15825872, 20461736, 20461767, 22024384, 50148080, 50178863, 50209646, 5942204, 4154744, 2904483, 2904514, 2918929, 2680632, 2727752, 24159974, 7536627, 7536627, 7494343, 7302081, 2698023, 2502940]

File 2 hash sequence:

40 41 141 76 142 31 5 41 8 70 32 143 144 145 146 10 147 2 55 148 149 22 2 150 151 152 153 10 154 18 40 41 88 155 10 28 156 157 153 158 15 33 126 159 2 160 161 40 41 8 32 162 33 44 44 163 164 44 88 165 166 33 54 108 167 2 33 44 168 32 40 41 169 170 48 8 44 171 35 15 33 108 93 48 8 172 88 28 33 108 13 29 173 40 41 13 174 45 33 20 2 26 175 174 45 33 176 177 23 45 33 7 45 33 23 178 2 179 171 5 180 181 45 33 182 23 

File 2 Fingerprint: 

[38300128, 42142330, 74447864, 28817755, 5848894, 9508723, 33955664, 136497278, 135273305, 13618114, 3632394, 55346594, 20525875, 6465515, 143177406, 141745175, 13841562, 17857147, 38251644, 40635234, 10224141, 30661604, 146021129, 14961933, 34382720, 6769563, 38170951, 38138463, 8498185, 31834334, 42107455, 45649825, 43420243, 86345912, 32193872, 53248111, 2877637, 31949437, 30788952, 38329950, 43063898, 44614921, 8864388, 32805161, 14942589, 33784482, 44735356, 12597656, 26945882, 13037205, 31975663, 38180158, 17233675, 31074741, 18560413, 2795177, 29393580, 42716171, 35890219, 22613508, 7837668, 26551252, 7344117, 10155321, 42717163]

File 2 Sorted Fingerprint: 

[31033170, 5618564, 5584929, 4886995, 4897504, 8383051, 8413183, 31779929, 13668985, 2289815, 2202364, 3631402, 2649291, 2650283, 2651275, 6465515, 13884466, 9923255, 9814662, 17857147, 10546014, 10158731, 10223149, 10224141, 18566613, 14987849, 14961902, 2956160, 3197433, 8381191, 8378215, 30583081, 31834303, 31834334, 42107455, 43418259, 33261512, 32248618, 32193841, 3564721, 2939110, 2877606, 2877637, 30583267, 30788921, 30788952, 8985815, 8750370, 8478438, 14872901, 8910857, 8908036, 8312216, 12874982, 12904773, 12913515, 13242177, 13037515, 2475970, 2468871, 2473273, 2794247, 25524780, 31989427, 22398709, 22272818, 7182948, 7182948, 2569466, 2165877, 6136791, 22272973]

Size of intersection: 0
Size of union: 207
Size of smaller set: 65
Size of larger set: 142
Jaccard: 0.000
Jaccard with smaller set: 0.000

Stats after sorting 

Size of intersection: 0
Size of union: 245
Size of smaller set: 72
Size of larger set: 173
Jaccard: 0.000
Jaccard with smaller set: 0.000

1: vertex_NN, vertex_NNS
2: take_VBZ, need_VB, lead_VBG, top_VB, construct_VB, involve_VBZ, require_VBN, affect_VB, reach_VBP, produce_VBN, need_VBZ, need_VBP, need_VBN, make_VBG, throw_VB
5: utilise_VBD, apply_VBZ, use_VBN, use_VBG
7: compute_VB, compute_VBG, computing_VBG
8: solve_VB, solve_VBZ, solve_VBN, solve_VBG
9: bellman_NNS, bellman_NN
10: algorithm_NN, algorithm_NNS
12: number_NN, figure_NN, name_NN, form_NN
13: found_VBN, remember_VBN, retrieve_VB, find_VBN, find_VBG, encounter_VBN, find_VB
14: exhibit_VBP, indicate_VBZ, show_VBN
15: store_VBZ, store_VBG
17: describe_VBD, describe_VB
18: break_VB, fail_VB
20: step_NN, step_NNS
21: approach_NN, advance_NN
22: decision_NNS, decision_NN
23: value_NN, value_NNS
24: program_NN, plan_NN
25: save_VBP, save_VB
26: come_VBZ, follow_VBZ
27: know_VBP, recognize_VBN
28: search_VBZ, look_VB
29: later_RB, subsequently_RB
31: much_RB, often_RB
32: problem_NN, problem_NNS
33: case_NNS, event_NNS, example_NN, case_NN, solution_NN, solution_NNS, instance_NN, result_NNS, result_NN
34: method_NNS, method_NN
35: path_NN, way_NN
37: mathematics_NNS
38: computer_NN
39: science_NN
40: dynamic_JJ
41: programming_NN
42: property_NNS
43: overlap_VBG
44: subproblem_NNS
45: optimal_JJ
46: substructure_NN
47: less_JJR
48: time_NN
49: naive_JJ
50: term_NN
51: originally_RB
52: richard_NN
53: process_NN
54: one_CD
55: best_JJS
56: another_DT
57: refine_VBN
58: modern_JJ
59: meaning_NN
60: field_NN
61: system_NNS
62: analysis_NN
63: engineering_NN
64: topic_NN
65: ieee_NN
66: contribution_NN
67: equation_NN
68: central_JJ
69: restate_VBZ
70: optimization_NN
71: recursive_JJ
72: word_NN
73: particular_JJ
74: connection_NN
75: instead_RB
76: mathematical_JJ
77: synonym_NN
78: thus_RB
79: action_NN
80: finalize_VBN
81: schedule_NN
82: exhibition_NN
83: sometimes_RB
84: call_VBN
85: sense_NN
86: mean_VBZ
87: acceptable_JJ
88: can_MD
89: overall_JJ
90: shortest_JJS
91: goal_NN
92: graph_NN
93: first_JJ
94: adjacent_JJ
95: pick_VB
96: general_JJ
97: three_CD
98: smaller_JJR
99: optimally_RB
100: recursively_NN
101: use_NN
102: original_JJ
103: divide_VBG
104: sub_NN
105: simple_JJ
106: solvable_JJ
107: constant_JJ
108: subproblem_NN
109: fibonaccus_JJ
110: sequence_NN
111: tree_NN
112: dag_NN
113: say_VB
114: many_JJ
115: different_JJ
116: larger_JJR
117: may_MD
118: end_VB
119: twice_RB
120: whenever_WRB
121: present_JJ
122: waste_VB
123: recompute_VBG
124: already_RB
125: order_NN
126: avoid_VB
127: reuse_VB
128: compute_JJ
129: memoization_NN
130: memorization_NN
131: although_IN
132: also_RB
133: fit_VBZ
134: sure_JJ
135: wont_VBP
136: anymore_RB
137: away_RB
138: space_NN
139: even_RB
140: well_RB
141: powerful_JJ
142: technique_NN
143: normally_RB
144: minimize_VBG
145: maximize_VBG
146: greedy_JJ
147: focus_VB
148: local_JJ
149: choice_NN
150: stage_NN
151: without_IN
152: proof_NN
153: correctness_NN
154: likely_JJ
155: design_VB
156: possibility_NNS
157: ensure_VBZ
158: whilst_NN
159: recompute_JJ
160: computational_JJ
161: efficiency_NN
162: combine_VBG
163: however_RB
164: independent_JJ
165: share_VB
166: subsubproblem_NNS
167: necessarily_RB
168: stem_VBG
169: reduce_VBZ
170: computation_JJ
171: bottom_NN
172: mean_NN
173: key_NN
174: structure_NN
175: generalise_VB
176: recursively_RB
177: define_VB
178: either_CC
179: caching_NN
180: table_NN
181: generate_VB
182: computed_JJ
